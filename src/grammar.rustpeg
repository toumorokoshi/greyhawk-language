use super::ast;
use super::lexer::token::{Token, TokenType};

// #[pub]
// module -> ast::Statements =
//        statement:s { vec!(s) }

spaces -> usize = s:" "+ { s.len() }

#[pub]
symbol -> String = [a-zA-Z0-9_]+ { match_str.to_string() }

#[pub]
assign -> Token = ":=" { Token{typ: TokenType::Assign, line_num: 1} }

#[pub]
assignment -> ast::Assignment = s:symbol spaces assign spaces e:expression
              { ast::Assignment{target: s, expression: Box::new(e)} }

#[pub]
expression -> ast::Expression = s:symbol
           { ast::Expression::Symbol(s) }

// statement -> ast::Statement =
//     assignment:assignment { ast::Statement::Assignment(assignment) }
//